<!DOCTYPE html>
<html>
<head>
  <title>CrmApp</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>

  <%= stylesheet_link_tag 'application', media: 'all', 'data-turbo-track': 'reload' %>
  <%= javascript_importmap_tags %>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
  <link rel="manifest" href="/manifest.json">

  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
</head>

<body>

  <!-- Profile bar with logged-in staff's email -->
  <div class="profile-bar">
    <% if staff_signed_in? %>
      <span>Welcome, <%= current_staff.email %></span>
      <%= link_to 'Logout', destroy_staff_session_path, method: :delete, class: "logout-link" %>
    <% else %>
      <%= link_to 'Login', new_staff_session_path, class: "logout-link" %>
    <% end %>
  </div>

  <!-- Flash messages -->
  <div class="main-content">
    <%= render 'shared/flash' %>
    <%= yield %>
  </div>

  <nav class="navbar">
    <div class="container-fluid d-flex justify-content-around">
      <%= link_to dashboard_path, class: "nav-link" do %>
        <i class="fas fa-home"></i>
        Home
      <% end %>

      <%= link_to search_clients_path, class: "nav-link" do %>
        <i class="fas fa-search"></i>
        Search
      <% end %>

      <%= link_to new_client_path, class: "nav-link" do %>
        <i class="fas fa-plus-circle"></i>
        New Client
      <% end %>

      <%= link_to appointments_path, class: "nav-link" do %>
        <i class="fas fa-calendar"></i>
        Appointments
      <% end %>

      <%= link_to campaigns_path, class: "nav-link" do %>
        <i class="fas fa-bullhorn"></i>
        Campaigns
      <% end %>
    </div>
  </nav>

  <!-- Signature Pad Script -->
  <script src="https://cdn.jsdelivr.net/npm/signature_pad@4.0.0/dist/signature_pad.umd.min.js" defer></script>

  <!-- Service Worker Registration -->
  <script>
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker
        .register('/service-worker.js')
        .then(function (registration) {
          console.log('ServiceWorker registration successful with scope: ', registration.scope);
        })
        .catch(function (error) {
          console.log('ServiceWorker registration failed: ', error);
        });
    }

    // Show loading screen only on the first visit with Turbo support
    document.addEventListener('turbo:load', function() {
      var loadingScreen = document.getElementById('loading-screen');
      
      if (loadingScreen) {
        // Check if the loading screen has been shown before
        if (localStorage.getItem('loadingScreenShown') === null) {
          // First visit, show the loading screen
          setTimeout(function() {
            loadingScreen.style.display = 'none';
            localStorage.setItem('loadingScreenShown', 'true'); 
          }, 3000); // Hide after 3 seconds
        } else {
          loadingScreen.style.display = 'none';
        }
      }
    });

    // Standalone mode for iOS
    if (window.navigator.standalone) {
      document.body.style.paddingTop = '80px'; // Increase padding to account for the fixed bar in standalone mode
    }

    // Check for an element on Turbo load and hide it

document.addEventListener('DOMContentLoaded', function() {
  bindLoadMoreButton();
});

function bindLoadMoreButton() {
  const loadMoreButton = document.getElementById('load-more');

  if (loadMoreButton) {
    loadMoreButton.addEventListener('click', async function(event) {
      event.preventDefault();

      const timelineContainer = document.getElementById('timeline-items');
      const nextUrl = timelineContainer.getAttribute('data-timeline-next-url');

      if (nextUrl) {
        try {
          const token = document.querySelector('meta[name="csrf-token"]').getAttribute('content'); 
          const response = await fetch(nextUrl, {
            method: 'GET',
            headers: {
              'Accept': 'text/javascript',
              'X-CSRF-Token': token 
            }
          });

          if (response.ok) {
            const script = await response.text(); 
            eval(script); 

            // Rebind the button after new items load
            bindLoadMoreButton();

            // Move the "No More Items" or "Load More" button to the end of the timeline items
            const loadMoreContainer = document.getElementById('load-more-container');
            timelineContainer.appendChild(loadMoreContainer); // Move the button to the end
          } else {
            console.error("Failed to load more items:", response.statusText);
          }
        } catch (error) {
          console.error("Error during fetch:", error);
        }
      } else {
        console.log("No next URL found.");
      }
    });
  }
}




  </script>
  
</body>
</html>

<style>
  #load-more-container {
  text-align: center; /* Center the button */
  margin-top: 20px; /* Add some space between the last item and the button */
}
</style>